# Configura le informazioni SNMP
router_ip = '192.168.1.1'
community_string = 'public'  # Cambia in base alla tua configurazione
port = 161

# OID per latitudine e longitudine
oid_latitude = '1.3.6.1.4.1.9.1.xxx.x.x.x'  # Sostituisci con l'OID effettivo per la latitudine
oid_longitude = '1.3.6.1.4.1.9.9.xxx.x.x.x'  # Sostituisci con l'OID effettivo per la longitudine

def get_snmp_data(target, oid, community, port):
    iterator = getCmd(
        SnmpEngine(),
        CommunityData(community),
        UdpTransportTarget((target, port)),
        ContextData(),
        ObjectType(ObjectIdentity(oid))
    )
 errorIndication, errorStatus, errorIndex, varBinds = next(iterator)

    if errorIndication:
        print(errorIndication)
        return None
    elif errorStatus:
        print('%s at %s' % (
            errorStatus.prettyPrint(),
            errorIndex and varBinds[int(errorIndex) - 1][0] or '?'
        ))
        return None
    else:
        for varBind in varBinds:
            return varBind[1]

latitude = get_snmp_data(router_ip, oid_latitude, community_string, port)
longitude = get_snmp_data(router_ip, oid_longitude, community_string, port)

if latitude and longitude:
    print(f'Latitudine: {latitude}')
    print(f'Longitudine: {longitude}')
else:
    print('Impossibile recuperare la posizione GPS dal router.')

//posizione gps da router 1120
